// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: yolov5_service.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_yolov5_5fservice_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_yolov5_5fservice_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3019000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3019004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_yolov5_5fservice_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_yolov5_5fservice_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_yolov5_5fservice_2eproto;
namespace yolov5 {
class ImageData;
struct ImageDataDefaultTypeInternal;
extern ImageDataDefaultTypeInternal _ImageData_default_instance_;
class InferenceResult;
struct InferenceResultDefaultTypeInternal;
extern InferenceResultDefaultTypeInternal _InferenceResult_default_instance_;
class ObjectDetection;
struct ObjectDetectionDefaultTypeInternal;
extern ObjectDetectionDefaultTypeInternal _ObjectDetection_default_instance_;
}  // namespace yolov5
PROTOBUF_NAMESPACE_OPEN
template<> ::yolov5::ImageData* Arena::CreateMaybeMessage<::yolov5::ImageData>(Arena*);
template<> ::yolov5::InferenceResult* Arena::CreateMaybeMessage<::yolov5::InferenceResult>(Arena*);
template<> ::yolov5::ObjectDetection* Arena::CreateMaybeMessage<::yolov5::ObjectDetection>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace yolov5 {

// ===================================================================

class ImageData final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolov5.ImageData) */ {
 public:
  inline ImageData() : ImageData(nullptr) {}
  ~ImageData() override;
  explicit constexpr ImageData(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ImageData(const ImageData& from);
  ImageData(ImageData&& from) noexcept
    : ImageData() {
    *this = ::std::move(from);
  }

  inline ImageData& operator=(const ImageData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ImageData& operator=(ImageData&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ImageData& default_instance() {
    return *internal_default_instance();
  }
  static inline const ImageData* internal_default_instance() {
    return reinterpret_cast<const ImageData*>(
               &_ImageData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ImageData& a, ImageData& b) {
    a.Swap(&b);
  }
  inline void Swap(ImageData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ImageData* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ImageData* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ImageData>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ImageData& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ImageData& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ImageData* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolov5.ImageData";
  }
  protected:
  explicit ImageData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kImageFieldNumber = 1,
    kWidthFieldNumber = 2,
    kHeightFieldNumber = 3,
    kChannelsFieldNumber = 4,
  };
  // bytes image = 1;
  void clear_image();
  const std::string& image() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_image(ArgT0&& arg0, ArgT... args);
  std::string* mutable_image();
  PROTOBUF_NODISCARD std::string* release_image();
  void set_allocated_image(std::string* image);
  private:
  const std::string& _internal_image() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_image(const std::string& value);
  std::string* _internal_mutable_image();
  public:

  // int32 width = 2;
  void clear_width();
  int32_t width() const;
  void set_width(int32_t value);
  private:
  int32_t _internal_width() const;
  void _internal_set_width(int32_t value);
  public:

  // int32 height = 3;
  void clear_height();
  int32_t height() const;
  void set_height(int32_t value);
  private:
  int32_t _internal_height() const;
  void _internal_set_height(int32_t value);
  public:

  // int32 channels = 4;
  void clear_channels();
  int32_t channels() const;
  void set_channels(int32_t value);
  private:
  int32_t _internal_channels() const;
  void _internal_set_channels(int32_t value);
  public:

  // @@protoc_insertion_point(class_scope:yolov5.ImageData)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr image_;
  int32_t width_;
  int32_t height_;
  int32_t channels_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolov5_5fservice_2eproto;
};
// -------------------------------------------------------------------

class InferenceResult final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolov5.InferenceResult) */ {
 public:
  inline InferenceResult() : InferenceResult(nullptr) {}
  ~InferenceResult() override;
  explicit constexpr InferenceResult(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InferenceResult(const InferenceResult& from);
  InferenceResult(InferenceResult&& from) noexcept
    : InferenceResult() {
    *this = ::std::move(from);
  }

  inline InferenceResult& operator=(const InferenceResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline InferenceResult& operator=(InferenceResult&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InferenceResult& default_instance() {
    return *internal_default_instance();
  }
  static inline const InferenceResult* internal_default_instance() {
    return reinterpret_cast<const InferenceResult*>(
               &_InferenceResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InferenceResult& a, InferenceResult& b) {
    a.Swap(&b);
  }
  inline void Swap(InferenceResult* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InferenceResult* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InferenceResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InferenceResult>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InferenceResult& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const InferenceResult& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InferenceResult* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolov5.InferenceResult";
  }
  protected:
  explicit InferenceResult(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDetectionsFieldNumber = 1,
  };
  // repeated .yolov5.ObjectDetection detections = 1;
  int detections_size() const;
  private:
  int _internal_detections_size() const;
  public:
  void clear_detections();
  ::yolov5::ObjectDetection* mutable_detections(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolov5::ObjectDetection >*
      mutable_detections();
  private:
  const ::yolov5::ObjectDetection& _internal_detections(int index) const;
  ::yolov5::ObjectDetection* _internal_add_detections();
  public:
  const ::yolov5::ObjectDetection& detections(int index) const;
  ::yolov5::ObjectDetection* add_detections();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolov5::ObjectDetection >&
      detections() const;

  // @@protoc_insertion_point(class_scope:yolov5.InferenceResult)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolov5::ObjectDetection > detections_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolov5_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ObjectDetection final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:yolov5.ObjectDetection) */ {
 public:
  inline ObjectDetection() : ObjectDetection(nullptr) {}
  ~ObjectDetection() override;
  explicit constexpr ObjectDetection(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ObjectDetection(const ObjectDetection& from);
  ObjectDetection(ObjectDetection&& from) noexcept
    : ObjectDetection() {
    *this = ::std::move(from);
  }

  inline ObjectDetection& operator=(const ObjectDetection& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectDetection& operator=(ObjectDetection&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ObjectDetection& default_instance() {
    return *internal_default_instance();
  }
  static inline const ObjectDetection* internal_default_instance() {
    return reinterpret_cast<const ObjectDetection*>(
               &_ObjectDetection_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ObjectDetection& a, ObjectDetection& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectDetection* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ObjectDetection* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ObjectDetection* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ObjectDetection>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ObjectDetection& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom(const ObjectDetection& from);
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message* to, const ::PROTOBUF_NAMESPACE_ID::Message& from);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectDetection* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "yolov5.ObjectDetection";
  }
  protected:
  explicit ObjectDetection(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kXminFieldNumber = 1,
    kYminFieldNumber = 2,
    kXmaxFieldNumber = 3,
    kYmaxFieldNumber = 4,
    kLabelFieldNumber = 5,
    kScoreFieldNumber = 6,
  };
  // float xmin = 1;
  void clear_xmin();
  float xmin() const;
  void set_xmin(float value);
  private:
  float _internal_xmin() const;
  void _internal_set_xmin(float value);
  public:

  // float ymin = 2;
  void clear_ymin();
  float ymin() const;
  void set_ymin(float value);
  private:
  float _internal_ymin() const;
  void _internal_set_ymin(float value);
  public:

  // float xmax = 3;
  void clear_xmax();
  float xmax() const;
  void set_xmax(float value);
  private:
  float _internal_xmax() const;
  void _internal_set_xmax(float value);
  public:

  // float ymax = 4;
  void clear_ymax();
  float ymax() const;
  void set_ymax(float value);
  private:
  float _internal_ymax() const;
  void _internal_set_ymax(float value);
  public:

  // int32 label = 5;
  void clear_label();
  int32_t label() const;
  void set_label(int32_t value);
  private:
  int32_t _internal_label() const;
  void _internal_set_label(int32_t value);
  public:

  // float score = 6;
  void clear_score();
  float score() const;
  void set_score(float value);
  private:
  float _internal_score() const;
  void _internal_set_score(float value);
  public:

  // @@protoc_insertion_point(class_scope:yolov5.ObjectDetection)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  float xmin_;
  float ymin_;
  float xmax_;
  float ymax_;
  int32_t label_;
  float score_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_yolov5_5fservice_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ImageData

// bytes image = 1;
inline void ImageData::clear_image() {
  image_.ClearToEmpty();
}
inline const std::string& ImageData::image() const {
  // @@protoc_insertion_point(field_get:yolov5.ImageData.image)
  return _internal_image();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ImageData::set_image(ArgT0&& arg0, ArgT... args) {
 
 image_.SetBytes(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:yolov5.ImageData.image)
}
inline std::string* ImageData::mutable_image() {
  std::string* _s = _internal_mutable_image();
  // @@protoc_insertion_point(field_mutable:yolov5.ImageData.image)
  return _s;
}
inline const std::string& ImageData::_internal_image() const {
  return image_.Get();
}
inline void ImageData::_internal_set_image(const std::string& value) {
  
  image_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArenaForAllocation());
}
inline std::string* ImageData::_internal_mutable_image() {
  
  return image_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArenaForAllocation());
}
inline std::string* ImageData::release_image() {
  // @@protoc_insertion_point(field_release:yolov5.ImageData.image)
  return image_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArenaForAllocation());
}
inline void ImageData::set_allocated_image(std::string* image) {
  if (image != nullptr) {
    
  } else {
    
  }
  image_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), image,
      GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (image_.IsDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited())) {
    image_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), "", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:yolov5.ImageData.image)
}

// int32 width = 2;
inline void ImageData::clear_width() {
  width_ = 0;
}
inline int32_t ImageData::_internal_width() const {
  return width_;
}
inline int32_t ImageData::width() const {
  // @@protoc_insertion_point(field_get:yolov5.ImageData.width)
  return _internal_width();
}
inline void ImageData::_internal_set_width(int32_t value) {
  
  width_ = value;
}
inline void ImageData::set_width(int32_t value) {
  _internal_set_width(value);
  // @@protoc_insertion_point(field_set:yolov5.ImageData.width)
}

// int32 height = 3;
inline void ImageData::clear_height() {
  height_ = 0;
}
inline int32_t ImageData::_internal_height() const {
  return height_;
}
inline int32_t ImageData::height() const {
  // @@protoc_insertion_point(field_get:yolov5.ImageData.height)
  return _internal_height();
}
inline void ImageData::_internal_set_height(int32_t value) {
  
  height_ = value;
}
inline void ImageData::set_height(int32_t value) {
  _internal_set_height(value);
  // @@protoc_insertion_point(field_set:yolov5.ImageData.height)
}

// int32 channels = 4;
inline void ImageData::clear_channels() {
  channels_ = 0;
}
inline int32_t ImageData::_internal_channels() const {
  return channels_;
}
inline int32_t ImageData::channels() const {
  // @@protoc_insertion_point(field_get:yolov5.ImageData.channels)
  return _internal_channels();
}
inline void ImageData::_internal_set_channels(int32_t value) {
  
  channels_ = value;
}
inline void ImageData::set_channels(int32_t value) {
  _internal_set_channels(value);
  // @@protoc_insertion_point(field_set:yolov5.ImageData.channels)
}

// -------------------------------------------------------------------

// InferenceResult

// repeated .yolov5.ObjectDetection detections = 1;
inline int InferenceResult::_internal_detections_size() const {
  return detections_.size();
}
inline int InferenceResult::detections_size() const {
  return _internal_detections_size();
}
inline void InferenceResult::clear_detections() {
  detections_.Clear();
}
inline ::yolov5::ObjectDetection* InferenceResult::mutable_detections(int index) {
  // @@protoc_insertion_point(field_mutable:yolov5.InferenceResult.detections)
  return detections_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolov5::ObjectDetection >*
InferenceResult::mutable_detections() {
  // @@protoc_insertion_point(field_mutable_list:yolov5.InferenceResult.detections)
  return &detections_;
}
inline const ::yolov5::ObjectDetection& InferenceResult::_internal_detections(int index) const {
  return detections_.Get(index);
}
inline const ::yolov5::ObjectDetection& InferenceResult::detections(int index) const {
  // @@protoc_insertion_point(field_get:yolov5.InferenceResult.detections)
  return _internal_detections(index);
}
inline ::yolov5::ObjectDetection* InferenceResult::_internal_add_detections() {
  return detections_.Add();
}
inline ::yolov5::ObjectDetection* InferenceResult::add_detections() {
  ::yolov5::ObjectDetection* _add = _internal_add_detections();
  // @@protoc_insertion_point(field_add:yolov5.InferenceResult.detections)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::yolov5::ObjectDetection >&
InferenceResult::detections() const {
  // @@protoc_insertion_point(field_list:yolov5.InferenceResult.detections)
  return detections_;
}

// -------------------------------------------------------------------

// ObjectDetection

// float xmin = 1;
inline void ObjectDetection::clear_xmin() {
  xmin_ = 0;
}
inline float ObjectDetection::_internal_xmin() const {
  return xmin_;
}
inline float ObjectDetection::xmin() const {
  // @@protoc_insertion_point(field_get:yolov5.ObjectDetection.xmin)
  return _internal_xmin();
}
inline void ObjectDetection::_internal_set_xmin(float value) {
  
  xmin_ = value;
}
inline void ObjectDetection::set_xmin(float value) {
  _internal_set_xmin(value);
  // @@protoc_insertion_point(field_set:yolov5.ObjectDetection.xmin)
}

// float ymin = 2;
inline void ObjectDetection::clear_ymin() {
  ymin_ = 0;
}
inline float ObjectDetection::_internal_ymin() const {
  return ymin_;
}
inline float ObjectDetection::ymin() const {
  // @@protoc_insertion_point(field_get:yolov5.ObjectDetection.ymin)
  return _internal_ymin();
}
inline void ObjectDetection::_internal_set_ymin(float value) {
  
  ymin_ = value;
}
inline void ObjectDetection::set_ymin(float value) {
  _internal_set_ymin(value);
  // @@protoc_insertion_point(field_set:yolov5.ObjectDetection.ymin)
}

// float xmax = 3;
inline void ObjectDetection::clear_xmax() {
  xmax_ = 0;
}
inline float ObjectDetection::_internal_xmax() const {
  return xmax_;
}
inline float ObjectDetection::xmax() const {
  // @@protoc_insertion_point(field_get:yolov5.ObjectDetection.xmax)
  return _internal_xmax();
}
inline void ObjectDetection::_internal_set_xmax(float value) {
  
  xmax_ = value;
}
inline void ObjectDetection::set_xmax(float value) {
  _internal_set_xmax(value);
  // @@protoc_insertion_point(field_set:yolov5.ObjectDetection.xmax)
}

// float ymax = 4;
inline void ObjectDetection::clear_ymax() {
  ymax_ = 0;
}
inline float ObjectDetection::_internal_ymax() const {
  return ymax_;
}
inline float ObjectDetection::ymax() const {
  // @@protoc_insertion_point(field_get:yolov5.ObjectDetection.ymax)
  return _internal_ymax();
}
inline void ObjectDetection::_internal_set_ymax(float value) {
  
  ymax_ = value;
}
inline void ObjectDetection::set_ymax(float value) {
  _internal_set_ymax(value);
  // @@protoc_insertion_point(field_set:yolov5.ObjectDetection.ymax)
}

// int32 label = 5;
inline void ObjectDetection::clear_label() {
  label_ = 0;
}
inline int32_t ObjectDetection::_internal_label() const {
  return label_;
}
inline int32_t ObjectDetection::label() const {
  // @@protoc_insertion_point(field_get:yolov5.ObjectDetection.label)
  return _internal_label();
}
inline void ObjectDetection::_internal_set_label(int32_t value) {
  
  label_ = value;
}
inline void ObjectDetection::set_label(int32_t value) {
  _internal_set_label(value);
  // @@protoc_insertion_point(field_set:yolov5.ObjectDetection.label)
}

// float score = 6;
inline void ObjectDetection::clear_score() {
  score_ = 0;
}
inline float ObjectDetection::_internal_score() const {
  return score_;
}
inline float ObjectDetection::score() const {
  // @@protoc_insertion_point(field_get:yolov5.ObjectDetection.score)
  return _internal_score();
}
inline void ObjectDetection::_internal_set_score(float value) {
  
  score_ = value;
}
inline void ObjectDetection::set_score(float value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:yolov5.ObjectDetection.score)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace yolov5

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_yolov5_5fservice_2eproto
